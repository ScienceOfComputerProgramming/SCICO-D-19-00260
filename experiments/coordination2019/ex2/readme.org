# -*- org-confirm-babel-evaluate: nil; -*-


* Choreography
Distributed choices can prevent faithful implementations.
The set models two branches. Participants *a* and
*c* should both send the message *x* or both send the
message *y*.

However, *a* and *c* do not coordinate to achieve this
behavior; this makes it impossible for them to distributively commit
to a common choice.

#+begin_src python :session coordination :results output replace drawer :hlines yes
gr1 = nx.DiGraph()
abx = add_pair(gr1, "a", "b", 1, "x")
cby = add_pair(gr1, "c", "b", 2, "x")
abz = add_pair(gr1, "a", "b", 3, "z")
gr1.add_edge(abx[1], abz[1])
gr1.add_edge(cby[1], abz[1])
gr1.add_edge(abx[0], abz[0])

gr2 = nx.DiGraph()
abx = add_pair(gr2, "a", "b", 1, "y")
cby = add_pair(gr2, "c", "b", 2, "y")
abz = add_pair(gr2, "a", "b", 3, "z")
gr2.add_edge(abx[1], cby[1])
gr2.add_edge(cby[1], abz[1])
gr2.add_edge(abx[0], abz[0])

global_view = [gr1, gr2]
debug_graphs(global_view, "test-coordination/2/global-view")
#+end_src

#+RESULTS:
:RESULTS:
Pomset 1
[[file:test-coordination/2/global-view/graph-0.png]]

Pomset 2
[[file:test-coordination/2/global-view/graph-1.png]]
:END:


* CC2
#+begin_src python :session coordination
cc2c = cc2closure(global_view)
cc2test(global_view, cc2c)
#+end_src

#+RESULTS:
| Graph | Match |
|     1 |     1 |
|     2 |     2 |

* CC3
#+begin_src python :session coordination
(cc3c, prefixes) = cc3closure(global_view)
cc3res = cc3test(prefixes, cc3c)
cc3res
#+end_src

#+RESULTS:
| Graph | Match |
|     1 |     1 |
|     2 |    15 |
|     3 |    16 |
|     4 |    28 |
|     5 |     2 |
|     6 |     9 |
|     7 |     3 |
|     8 |     4 |
|     9 |    14 |
|    10 |     6 |
|    11 | error |
|    12 | error |
|    13 |     8 |
|    14 |    13 |
|    15 |    10 |
|    16 |     5 |
|    17 |    12 |
|    18 |     7 |
|    19 |    11 |
|    20 | error |
|    21 | error |
|    22 |    17 |
|    23 |    24 |
|    24 | error |
|    25 | error |
|    26 | error |
|    27 |    18 |
|    28 |    19 |
|    29 |    21 |
|    30 |    23 |
|    31 |    27 |
|    32 | error |
|    33 | error |
|    34 | error |
|    35 |    25 |
|    36 |    20 |
|    37 |    22 |
|    38 |    26 |


#+begin_src python :session coordination :results output drawer
errors = [cc3c[k] for k in [i-1 for [i,j] in cc3res[1:] if j == "error"]]
debug_graphs(errors, "test-coordination/2/cc3-errors")
#+end_src

#+RESULTS:
:RESULTS:
Pomset 1
[[file:test-coordination/2/cc3-errors/graph-0.png]]

Pomset 2
[[file:test-coordination/2/cc3-errors/graph-1.png]]

Pomset 3
[[file:test-coordination/2/cc3-errors/graph-2.png]]

Pomset 4
[[file:test-coordination/2/cc3-errors/graph-3.png]]

Pomset 5
[[file:test-coordination/2/cc3-errors/graph-4.png]]

Pomset 6
[[file:test-coordination/2/cc3-errors/graph-5.png]]

Pomset 7
[[file:test-coordination/2/cc3-errors/graph-6.png]]

Pomset 8
[[file:test-coordination/2/cc3-errors/graph-7.png]]

Pomset 9
[[file:test-coordination/2/cc3-errors/graph-8.png]]

Pomset 10
[[file:test-coordination/2/cc3-errors/graph-9.png]]
:END:



